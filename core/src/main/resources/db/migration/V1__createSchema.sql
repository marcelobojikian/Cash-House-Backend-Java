
DROP TABLE IF EXISTS USERS CASCADE;

DROP TABLE IF EXISTS DASHBOARD_CASHIER;
DROP TABLE IF EXISTS DASHBOARD_FLATMATE;
DROP TABLE IF EXISTS DASHBOARD_GUEST;
DROP TABLE IF EXISTS DASHBOARD_TRANSACTION;
DROP TABLE IF EXISTS DASHBOARD;
DROP TABLE IF EXISTS TRANSACTION;
DROP TABLE IF EXISTS CASHIER;
DROP TABLE IF EXISTS FLATMATE;
DROP TABLE IF EXISTS LANGUAGE;

CREATE TABLE USERS (
  ID		SERIAL 		  PRIMARY KEY,
  USERNAME  VARCHAR(256)  NOT NULL,
  PASSWORD  VARCHAR(256)  NOT NULL,
  ENABLED   BOOLEAN       NOT NULL,
  ROLES		VARCHAR(256)  NOT NULL,
  DASHBOARD_ID BIGINT
);

--
-- App tables
--

CREATE TABLE FLATMATE (
	ID SERIAL PRIMARY KEY,
	NICKNAME VARCHAR(255)
);

CREATE TABLE DASHBOARD (
	ID SERIAL PRIMARY KEY,
	OWNER_ID BIGINT,
	FOREIGN KEY (OWNER_ID) REFERENCES USERS(ID)
);
 
ALTER TABLE USERS
ADD FOREIGN KEY (DASHBOARD_ID) REFERENCES DASHBOARD(ID);

CREATE TABLE CASHIER (
	ID SERIAL PRIMARY KEY,
	NAME VARCHAR(200),
	BALANCE DECIMAL(12,2),
	STARTED DECIMAL(12,2)
);

CREATE TABLE TRANSACTION (
	ID SERIAL PRIMARY KEY,
	FLATMATE_ID BIGINT,
	CASHIER_ID BIGINT,
	STATUS VARCHAR(20),
	ACTION VARCHAR(20),
	VALUE DECIMAL(12,2),
	CREATED_AT TIMESTAMP,
	UPDATED_AT TIMESTAMP,
	FOREIGN KEY (FLATMATE_ID) REFERENCES FLATMATE(ID),
	FOREIGN KEY (CASHIER_ID) REFERENCES CASHIER(ID)
);

CREATE TABLE DASHBOARD_CASHIER (
	ID_DASHBOARD BIGINT,
	ID_CASHIER BIGINT,
	FOREIGN KEY (ID_DASHBOARD) REFERENCES DASHBOARD(ID),
	FOREIGN KEY (ID_CASHIER) REFERENCES CASHIER(ID)
);

CREATE TABLE DASHBOARD_FLATMATE (
	ID_DASHBOARD BIGINT,
	ID_FLATMATE BIGINT,
	FOREIGN KEY (ID_DASHBOARD) REFERENCES DASHBOARD(ID),
	FOREIGN KEY (ID_FLATMATE) REFERENCES FLATMATE(ID)
);

CREATE TABLE DASHBOARD_GUEST (
	ID_DASHBOARD BIGINT,
	ID_PROFILE BIGINT,
	FOREIGN KEY (ID_DASHBOARD) REFERENCES DASHBOARD(ID),
	FOREIGN KEY (ID_PROFILE) REFERENCES USERS(ID)
);

CREATE TABLE DASHBOARD_TRANSACTION (
	ID_DASHBOARD BIGINT,
	ID_TRANSACTION BIGINT,
	FOREIGN KEY (ID_DASHBOARD) REFERENCES DASHBOARD(ID),
	FOREIGN KEY (ID_TRANSACTION) REFERENCES TRANSACTION(ID)
);

CREATE TABLE LANGUAGE (
	ID SERIAL PRIMARY KEY,
	LOCALE VARCHAR(5), 
	MESSAGE_KEY VARCHAR(255),
	MESSAGE_CONTENT VARCHAR(255)
);

--
-- ACLs tables
--

DROP TABLE IF EXISTS ACL_ENTRY;
DROP TABLE IF EXISTS ACL_OBJECT_IDENTITY;
DROP TABLE IF EXISTS ACL_CLASS;
DROP TABLE IF EXISTS ACL_SID;

CREATE TABLE ACL_SID(
    ID BIGSERIAL NOT NULL PRIMARY KEY,
    PRINCIPAL BOOLEAN NOT NULL,
    SID VARCHAR(100) NOT NULL,
    CONSTRAINT UNIQUE_UK_1 UNIQUE(SID,PRINCIPAL)
);

CREATE TABLE ACL_CLASS(
    ID BIGSERIAL NOT NULL PRIMARY KEY,
    CLASS VARCHAR(100) NOT NULL,
    CONSTRAINT UNIQUE_UK_2 UNIQUE(CLASS)
);

CREATE TABLE ACL_OBJECT_IDENTITY(
    ID BIGSERIAL PRIMARY KEY,
    OBJECT_ID_CLASS BIGINT NOT NULL,
    OBJECT_ID_IDENTITY VARCHAR(36) NOT NULL,
    PARENT_OBJECT BIGINT,
    OWNER_SID BIGINT,
    ENTRIES_INHERITING BOOLEAN NOT NULL,
    CONSTRAINT UNIQUE_UK_3 UNIQUE(OBJECT_ID_CLASS,OBJECT_ID_IDENTITY),
    CONSTRAINT FOREIGN_FK_1 FOREIGN KEY(PARENT_OBJECT)REFERENCES ACL_OBJECT_IDENTITY(ID),
    CONSTRAINT FOREIGN_FK_2 FOREIGN KEY(OBJECT_ID_CLASS)REFERENCES ACL_CLASS(ID),
    CONSTRAINT FOREIGN_FK_3 FOREIGN KEY(OWNER_SID)REFERENCES ACL_SID(ID)
);

CREATE TABLE ACL_ENTRY(
    ID BIGSERIAL PRIMARY KEY,
    ACL_OBJECT_IDENTITY BIGINT NOT NULL,
    ACE_ORDER INT NOT NULL,
    SID BIGINT NOT NULL,
    MASK INTEGER NOT NULL,
    GRANTING BOOLEAN NOT NULL,
    AUDIT_SUCCESS BOOLEAN NOT NULL,
    AUDIT_FAILURE BOOLEAN NOT NULL,
    CONSTRAINT UNIQUE_UK_4 UNIQUE(ACL_OBJECT_IDENTITY,ACE_ORDER),
    CONSTRAINT FOREIGN_FK_4 FOREIGN KEY(ACL_OBJECT_IDENTITY) REFERENCES ACL_OBJECT_IDENTITY(ID),
    CONSTRAINT FOREIGN_FK_5 FOREIGN KEY(SID) REFERENCES ACL_SID(ID)
);

